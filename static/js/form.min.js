'use strict';function show(ele){ele.style.display='';}function hide(ele){ele.style.display='none';}const success_card_class='card text-white bg-success mb-3 status-card';const working_card_class='card text-white bg-secondary mb-3 status-card';const fail_card_class='card text-black bg-warning mb-3 status-card';function update_card(card,classes,state,msg){const state_dom=card.querySelector('.state');const msg_dom=card.querySelector('.msg');card.classList=classes;state_dom.innerHTML=state;msg_dom.innerHTML=msg;show(card);}function get_pastes(){const s=window.localStorage;let list_json=s.getItem('pastes');if(list_json===null){let array=[];return array;}else{let array=JSON.parse(list_json);return array;}}function add_paste_to_storage(paste){const s=window.localStorage;let array=get_pastes();paste.create_time=Date.now();array.push(paste);const new_json=JSON.stringify(array);s.setItem('pastes',new_json);}function expire_paste_in_storage(){const array=get_pastes();const result=array.filter((paste)=>{let expire_time=new Date(paste.expire_time);if(expire_time.getTime()>Date.now()){return true;}else{return false;}});window.localStorage.setItem('pastes',JSON.stringify(result));}function show_pastes_from_storage(e){expire_paste_in_storage();const list=e.querySelector('.local-paste-list');const array=get_pastes();if(array.size==0){return;}list.innerHTML='';for(const paste of array){let a=document.createElement('a');let create_time=new Date(paste.create_time);a.innerText=paste.id+" created on "+create_time.toLocaleString();a.href='#';a.classList='list-group-item list-group-item-action';a.onclick=()=>{fill_id_and_key(e,paste.id,paste.key);};a.dataset.id=paste.id;a.dataset.key=paste.key;list.appendChild(a);}}function fill_id_and_key(e,id,key){e.querySelector('.id').value=id;e.querySelector('.key').value=key;}function update_status_card(){show_pastes_from_storage(document.getElementById('modify'));show_pastes_from_storage(document.getElementById('delete'));}function create(){const create1=document.getElementById('create');const text_input=create1.querySelector('.text-input');const create_status=create1.querySelector('.status-card');const file_selector=create1.querySelector('#createFile');update_card(create_status,working_card_class,"Uploading","Hang tight...");const val=text_input.value;const name=create1.querySelector('.name').value;const exp_time=create1.querySelector('.expire-in').value;const exp_time_unit=create1.querySelector('.expire-time-unit').value;const formData=new FormData();if(file_selector.files.length>0){formData.append('c',file_selector.files[0]);}else{if(val.length==0){create_status.classList=fail_card_class;state.innerHTML="Warning";msg.innerHTML="Cannot create empty paste.";return;}formData.append('c',val);}let h=new Headers();if(exp_time.length!=0){h.append("Expire-After",exp_time*exp_time_unit);}if(name.length!=0){h.append("Name",name);}const req=new Request('/',{mode:'cors',method:'POST',headers:h,body:formData});fetch(req).then((res)=>res.json()
).then((res)=>{if(res.success){let result_msg=`Paste ID: <a href=${res.info.id}>${res.info.id}</a>, modify key: ${res.info.key}. `;if(res.info.expire_time!=null){let t=new Date(res.info.expire_time);result_msg+=`Expire at ${t.toLocaleString()}.`;}update_card(create_status,success_card_class,"Success",result_msg);add_paste_to_storage({id:res.info.id,key:res.info.key,expire_time:new Date(res.info.expire_time)});update_status_card();}else{update_card(create_status,fail_card_class,"Failed",res.message);}}).catch((err)=>{update_card(create_status,fail_card_class,"Failed",err.message);});}function modify(){const modify1=document.getElementById('modify');const id=modify1.querySelector('.id').value;const key=modify1.querySelector('.key').value;const card=modify1.querySelector('.status-card');const h=new Headers();h.append('Key',key);const content=modify1.querySelector('#modify-textarea').value;const files=modify1.querySelector('#update-with-file').files;const formData=new FormData();if(files.length>0){formData.append('c',files[0]);h.append('Update-Content','y');}else if(content.length>0){formData.append('c',content);h.append('Update-Content','y');}const name=create.querySelector('.name').value;if(name.length>0){h.append("Name",name);}const exp_time=modify1.querySelector('.expire-in').value;const exp_time_unit=modify1.querySelector('.expire-time-unit').value;if(exp_time.length!=0){h.append("Expire-After",exp_time*exp_time_unit);}const req=new Request('/'+id,{mode:'cors',method:'PUT',headers:h,body:formData});update_card(card,working_card_class,"Working","Hang tight...");fetch(req).then((res)=>res.json()
).then((res)=>{if(res.success){update_card(card,success_card_class,"Success","Paste has been updated.");}else{update_card(card,fail_card_class,"Failed",res.message);}}).catch((err)=>{update_card(card,fail_card_class,"Failed",err.message);});}function del(){const main=document.getElementById('delete');const id=main.querySelector('.id').value;const key=main.querySelector('.key').value;const card=main.querySelector('.status-card');const h=new Headers();h.append('Key',key);const req=new Request('/'+id,{mode:'cors',method:'DELETE',headers:h});update_card(card,working_card_class,"Working","Hang tight...");fetch(req).then((res)=>res.json()
).then((res)=>{if(res.success){update_card(card,success_card_class,"Success","Paste has been deleted.");}else{update_card(card,fail_card_class,"Failed",res.message);}}).catch((err)=>{update_card(card,fail_card_class,"Failed",err.message);});}

